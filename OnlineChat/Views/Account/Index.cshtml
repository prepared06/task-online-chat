@model OnlineChat.Models.DTO.UserAndContactsViewModel;
<h1 class="text-center">hello @Model.NickName</h1>



<div class="row">
    <div id="chats" class="col-md-3">
        <div class="contacts pt-2">
            @foreach(var contacts in @Model.Contacts)
            {
                <button class = "contact btn btn-primary btn-block" value="@contacts">@contacts</button>
            }         
        </div>
        <div class="groups pt-2">
            @if(Model.Groups != null)
            {
                foreach(var group in Model.Groups)
                {
                    <button class= "group btn btn-primary btn-block" value="@group">@group</button>
                }
            }
        </div>
            
        
    </div>
    <div id="chatroom" class="col-md-9">
        
            <h3 class="text-center">Chating</h3>
        
    </div>
</div>



<script>
    //connection to hub
    const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .build();
    //names of users
    const userName='@Model.NickName';
    let adresseeName="";

    //adding chat
    function addChat(){
        let form= document.createElement("div");
        form.setAttribute("id","inputForm");

        let inputText = document.createElement("input");
        inputText.type = "text";
        inputText.id="message";

        let inputButton = document.createElement("input");
        inputButton.type = "button";
        inputButton.id="sendBtn";
        inputButton.value="Send";

        form.appendChild(inputText);
        form.appendChild(inputButton);

        var chatWindow = document.getElementById("chatroom");//.firstChild;
        chatWindow.appendChild(form);
        //document.getElementById("chatroom").insertBefore(form, firstElem);
    }
    //clear chat
    function clearChat(){
        var chatWindow = document.getElementById("chatroom");
        chatWindow.innerHTML = '';
    }
    

    
    //
    const contacts = document.querySelectorAll("button.contact");//.getElementsByTagName("button");
    Array.from(contacts).forEach(contact =>
        contact.addEventListener("click", function(contact){
            adresseeName=this.value;
            
            //clear chat space
            clearChat();
            //let test=GetMessages(userName,adresseeName);
            let url="/Messages?nickNameSender="+userName+"&nickNameAdressee="+adresseeName;

            fetch(url, {
                method: "GET",
                headers: { "Accept": "application/json" }
            }).then(response => response.json()).then(data=>{
                for(let i=0;i<data.length;i++){
                    let userNameElem = document.createElement("b");
                    userNameElem.appendChild(document.createTextNode(data[i].sender.nickName + ': '));

                    let elem = document.createElement("p");
                    elem.appendChild(userNameElem);
                    elem.appendChild(document.createTextNode(data[i].text));

                    let chatWindow = document.getElementById("chatroom");//.firstChild;

                    //firstElem.appendChild(userNameElem);
                    chatWindow.appendChild(elem);
                    //document.getElementById("chatroom").insertBefore(elem, firstElem);
                }
                
                addChat();

                // отправка сообщения на сервер
                document.getElementById("sendBtn").addEventListener("click", function (e) {
                let message = document.getElementById("message").value;
            
                hubConnection.invoke("Send", userName,adresseeName, message);
                //clear input field after sending message
                let inputField = document.getElementById("message");
                inputField.value="";
                });
            });
                     
        }));

        const groupContacts = document.querySelectorAll("button.group");
        Array.from(groupContacts).forEach(groupContact =>
            groupContact.addEventListener("click", function(groupContact){
                
                adresseeName=this.value;
                
                let url="/MessagesFromGroups/?groupName="+adresseeName;//group name

                clearChat();

                fetch(url, {
                method: "GET",
                headers: { "Accept": "application/json" }
                }).then(response => response.json()).then(data =>{
                    for(let i=0;i<data.length;i++){
                    let userNameElem = document.createElement("b");
                    userNameElem.appendChild(document.createTextNode(data[i].sender.nickName + ': '));

                    let elem = document.createElement("p");
                    elem.appendChild(userNameElem);
                    elem.appendChild(document.createTextNode(data[i].text));

                    let chatWindow = document.getElementById("chatroom");//.firstChild;

                    //firstElem.appendChild(userNameElem);
                    chatWindow.appendChild(elem);
                    //document.getElementById("chatroom").insertBefore(elem, firstElem);
                    }

                    addChat();

                    
                    // отправка сообщения на сервер
                    document.getElementById("sendBtn").addEventListener("click", function (e) {
                    let message = document.getElementById("message").value;
            //CHANGE LOGIC HERE
                    hubConnection.invoke("SendToGroups", userName,adresseeName, message);
            //CHANGE LOGIC HERE
                    //clear input field after sending message
                    let inputField = document.getElementById("message");
                    inputField.value="";
                    });
                    
                });



                
            }));

    // получение сообщения от сервера
        hubConnection.on('Recieve', function (userName, message) {
  
            // создаем элемент <b> для имени пользователя
            let userNameElem = document.createElement("b");
            userNameElem.appendChild(document.createTextNode(userName + ': '));
  
            

            // создает элемент <p> для сообщения пользователя
            let elem = document.createElement("p");
            elem.appendChild(userNameElem);
            elem.appendChild(document.createTextNode(message));
  
            let form = document.getElementById("inputForm");//.firstChild;
            
            document.getElementById("chatroom").insertBefore(elem, form);
            
        });


        
 
        
        hubConnection.start();
</script>